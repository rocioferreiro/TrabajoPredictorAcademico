p + scale_fill_manual(values=c("#00FF7F", "orange")) + theme(aspect.ratio = 0.7) + labs(title = "Notas de Analisis 1", subtitle = "Grafico de Densidad") +   theme(plot.title = element_text(size = 46, face = "bold"))
load(file = "analisisInd.rdata")
load(file = "analisisInf.rdata")
library(ggplot2)
names(AnalisisInd)
AnalisisInd[,4] <- "IND"
AnalisisInf[,4] <- "INF"
analisis <- merge.data.frame(AnalisisInd, AnalisisInf, all = TRUE)
names(analisis) <- c("names", "Nota", "Prom",  "Career")
Nota <- analisis$Nota
Career <- analisis$Career
names(analisis)
analisis <- analisis[,-3]
analisis$Nota <- as.numeric(analisis$Nota)
analisis$Career <- as.factor(analisis$Career)
library(plyr)
p<-ggplot(analisis, aes(x=Nota, fill=Career), xlim = c(0,10)) +
geom_density(alpha=0.7)
p + scale_fill_manual(values=c("#00FF7F", "orange")) + theme(aspect.ratio = 0.7) + labs(title = "Notas de Analisis 1", subtitle = "Grafico de Densidad") +   theme(plot.title = element_text(size = 40, face = "bold")) +  theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent",colour = NA)
)
?paste
?text
load(file = "analisisInd.rdata")
load(file = "analisisInf.rdata")
library(ggplot2)
AnalisisInd[,4] <- "IND"
AnalisisInf[,4] <- "INF"
analisis <- merge.data.frame(AnalisisInd, AnalisisInf, all = TRUE)
names(analisis) <- c("names", "Nota", "Prom",  "Career")
Nota <- analisis$Nota
Career <- analisis$Career
analisis <- analisis[,-3]
analisis$Nota <- as.numeric(analisis$Nota)
analisis$Career <- as.factor(analisis$Career)
library(plyr)
p<-ggplot(analisis, aes(x=Nota, fill=Career), xlim = c(0,10)) +
geom_density(alpha=0.7)
p + scale_fill_manual(values=c("#00FF7F", "orange")) + theme(aspect.ratio = 0.7) + labs(title = "Notas de Analisis 1", subtitle = "Grafico de Densidad") +   theme(plot.title = element_text(size = 35, face = "bold")) +  theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent",colour = NA)
)
load("~/Desktop/TpPredictorAcademico/TrabajoPredictorAcademico/finalQuals.RData")
barplot(table(df$ingreso.Career,df$ingreso.Year),beside=TRUE, legend.text = TRUE ,col=c("#FF7F00" ,"#80FF00", "#00FF7F", "#0080FF" ,"#7F00FF" ,"#FF0080"), ylim = c(0, 100))
barplot(table(df$ingreso.Career,df$ingreso.Year),beside=TRUE, legend.text = TRUE ,col=c("#FF7F00" ,"#80FF00", "#00FF7F", "#0080FF" ,"#7F00FF" ,"#FF0080"), ylim = c(0, 100)))
barplot(table(df$ingreso.Career,df$ingreso.Year),beside=TRUE, legend.text = TRUE ,col=c("#FF7F00" ,"#80FF00", "#00FF7F", "#0080FF" ,"#7F00FF" ,"#FF0080"), ylim = c(0, 100))
barplot(table(df$ingreso.Career,df$ingreso.Year),beside=TRUE, legend.text = TRUE, ylim = c(0, 100) ,col=c("#FF7F00" ,"#80FF00", "#00FF7F", "#0080FF" ,"#7F00FF" ,"#FF0080"))
barplot(table(df$ingreso.Career,df$ingreso.Year),beside=TRUE, legend.text = TRUE, ylim = c(0,100), col=c("#FF7F00" ,"#80FF00", "#00FF7F", "#0080FF" ,"#7F00FF" ,"#FF0080"))
barplot(table(df$ingreso.Career,df$ingreso.Year),beside=TRUE, legend.text = TRUE, ylim=c(0,100), col=c("#FF7F00" ,"#80FF00", "#00FF7F", "#0080FF" ,"#7F00FF" ,"#FF0080"))
library(plotrix)
Year <- ingreso[, "Year"]
library(plotrix)
load(file = "ingreso.rdata")
Year <- ingreso[, "Year"]
df <- data.frame(ingreso$Year, ingreso$Sex, ingreso$Career)
df$ingreso.Career <- as.character(df$ingreso.Career)
df[which(df$ingreso.Sex == "F"),"ingreso.Career"] <- paste(df[which(df$ingreso.Sex == "F"), "ingreso.Career"],"F")
df[which(df$ingreso.Sex == "M"),"ingreso.Career"] <- paste(df[which(df[,"ingreso.Sex"] == "M"), "ingreso.Career"],"M")
barplot(table(df$ingreso.Career,df$ingreso.Year),beside=TRUE, legend.text = TRUE, ylim=c(0,100), col=c("#FF7F00" ,"#80FF00", "#00FF7F", "#0080FF" ,"#7F00FF" ,"#FF0080"))
load("~/Desktop/TpPredictorAcademico/TrabajoPredictorAcademico/finalQuals.RData")
model<-lm(finalQuals~finalQuals$Baja);
coef(model);
finalQuals <- load("~/Desktop/TpPredictorAcademico/TrabajoPredictorAcademico/finalQuals.RData")
model<-lm(finalQuals~finalQuals$Baja);
finalQuals <- load("~/Desktop/TpPredictorAcademico/TrabajoPredictorAcademico/finalQuals.RData")
load("~/Desktop/TpPredictorAcademico/TrabajoPredictorAcademico/finalQuals.RData")
hyp.out <- glm(finalQuals$Baja~finalQuals$`Algebra exam 1`+finalQuals$`Algebra exam 2`+finalQuals$`Analisis exam 1`+finalQuals$`IntroProg exam 1`,
data=NH11, family="binomial")
summary(hyp.out)
hyp.out <- glm(finalQuals$Baja~finalQuals$`Algebra exam 1`+finalQuals$`Algebra exam 2`+finalQuals$`Analisis exam 1`+finalQuals$`IntroProg exam 1`,
data=NH11, family="binomial")
hyp.out <- glm(finalQuals$Baja~finalQuals$`Algebra exam 1`+finalQuals$`Algebra exam 2`+finalQuals$`Analisis exam 1`+finalQuals$`IntroProg exam 1`,
data=finalQuals, family="binomial")
hyp.out <- glm(Baja~`Algebra exam 1`+`Algebra exam 2`+`Analisis exam 1`+`IntroProg exam 1`,
data=finalQuals, family="binomial")
summary(hyp.out)
porcentajes <- prop.table(notas)
notas <- as.factor(notas)
porcentajes <- prop.table(notas)
notas <- as.factor(notas)
load(file = "ingreso.rdata")
load("~/Desktop/TpPredictorAcademico/TrabajoPredictorAcademico/finalQuals.RData")
load(file = "analisisInd.rdata")
load(file = "AnalisisInf.rdata")
library(plotrix)
careers <- table(ingreso$Career)
table <- table(ingreso[which(ingreso$Sex == "F"), "PromCI"])
ap <- finalQuals[which(finalQuals[c(1:length(finalQuals)),c(2:5)] > 3),"Name"]
desap <- finalQuals[which(finalQuals[c(1:length(finalQuals)),c(2:5)] < 4),"Name"]
desap <- desap[1:41]
ap <- rep("APROBADO", length(ap))
desap <- rep("DESAPROBADO", length(desap))
notas <- c(ap, desap)
notas <- as.factor(notas)
porcentajes <- prop.table(notas)
notas
porcentajes <- table(notas)
porcentajes
porcentajes <- table(notas) / length(notas)
porcentajes
porcentajes <- (table(notas) / length(notas)) * 100
porcentajes
load(file = "ingreso.rdata")
load("~/Desktop/TpPredictorAcademico/TrabajoPredictorAcademico/finalQuals.RData")
load(file = "analisisInd.rdata")
load(file = "AnalisisInf.rdata")
library(plotrix)
careers <- table(ingreso$Career)
table <- table(ingreso[which(ingreso$Sex == "F"), "PromCI"])
ap <- finalQuals[which(finalQuals[c(1:length(finalQuals)),c(2:5)] > 3),"Name"]
desap <- finalQuals[which(finalQuals[c(1:length(finalQuals)),c(2:5)] < 4),"Name"]
desap <- desap[1:41]
ap <- rep("APROBADO", length(ap))
desap <- rep("DESAPROBADO", length(desap))
notas <- c(ap, desap)
notas <- as.factor(notas)
porcentajes <- (table(notas) / length(notas)) * 100
par(mfrow=c(2,2))
barplot(careers,col = c("#F06C98","#36D88A", "#DFFB3F"),ylim=c(0,250),main="Distribucion Por Carrera",   ylab = "Cantidad de Ingresantes",las=1,font.axis=4)
pie(table(ingreso$Status), c("BAJA","MATRICULADO"), col = c("#FE3F44", "#42E73A"), main = "Proporcion de Bajas")
pie(table(notas), c(paste("APROBADOS", porcentajes[1]),paste("DESAPROBADOS", porcentajes[2])), col = c("#42E73A", "#FE3F44"), main = "Aprobados Primeros Parciales")
histStack(ingreso$PromCI,ingreso$Sex,legend.pos="topright", col = c("#F06C98", "#6CF0C4"), main = "Promedio del Curso de ingreso")
Schools <- table(ingreso$School)
Schools <- as.data.frame(Schools)
topSchools <- Schools[which(Schools[,"Freq"] > 10),]
par(mfrow=c(1,1))
x <- barplot(topSchools$Freq,col = c("#FF7400", "#8BFF00" ,"#00FF74" ,"#008BFF" ,"#7400FF" ,"#FF008B"), ylim=c(0,27),main="Colegio con mas ingresantes",   ylab = "Cantidad de Ingresantes",las=1,font.axis=4, legend.text = topSchools$Var1, xlim = c(0,10))
load(file = "ingreso.rdata")
load("~/Desktop/TpPredictorAcademico/TrabajoPredictorAcademico/finalQuals.RData")
load(file = "analisisInd.rdata")
load(file = "AnalisisInf.rdata")
library(plotrix)
careers <- table(ingreso$Career)
table <- table(ingreso[which(ingreso$Sex == "F"), "PromCI"])
ap <- finalQuals[which(finalQuals[c(1:length(finalQuals)),c(2:5)] > 3),"Name"]
desap <- finalQuals[which(finalQuals[c(1:length(finalQuals)),c(2:5)] < 4),"Name"]
desap <- desap[1:41]
ap <- rep("APROBADO", length(ap))
desap <- rep("DESAPROBADO", length(desap))
notas <- c(ap, desap)
notas <- as.factor(notas)
porcentajes <- (table(notas) / length(notas)) * 100
porcentajes <- as.integer(porcentajes)
par(mfrow=c(2,2))
barplot(careers,col = c("#F06C98","#36D88A", "#DFFB3F"),ylim=c(0,250),main="Distribucion Por Carrera",   ylab = "Cantidad de Ingresantes",las=1,font.axis=4)
pie(table(ingreso$Status), c("BAJA","MATRICULADO"), col = c("#FE3F44", "#42E73A"), main = "Proporcion de Bajas")
pie(table(notas), c(paste("APROBADOS", porcentajes[1]),paste("DESAPROBADOS", porcentajes[2])), col = c("#42E73A", "#FE3F44"), main = "Aprobados Primeros Parciales")
histStack(ingreso$PromCI,ingreso$Sex,legend.pos="topright", col = c("#F06C98", "#6CF0C4"), main = "Promedio del Curso de ingreso")
Schools <- table(ingreso$School)
Schools <- as.data.frame(Schools)
topSchools <- Schools[which(Schools[,"Freq"] > 10),]
par(mfrow=c(1,1))
x <- barplot(topSchools$Freq,col = c("#FF7400", "#8BFF00" ,"#00FF74" ,"#008BFF" ,"#7400FF" ,"#FF008B"), ylim=c(0,27),main="Colegio con mas ingresantes",   ylab = "Cantidad de Ingresantes",las=1,font.axis=4, legend.text = topSchools$Var1, xlim = c(0,10))
load(file = "ingreso.rdata")
load("~/Desktop/TpPredictorAcademico/TrabajoPredictorAcademico/finalQuals.RData")
load(file = "analisisInd.rdata")
load(file = "AnalisisInf.rdata")
library(plotrix)
careers <- table(ingreso$Career)
table <- table(ingreso[which(ingreso$Sex == "F"), "PromCI"])
ap <- finalQuals[which(finalQuals[c(1:length(finalQuals)),c(2:5)] > 3),"Name"]
desap <- finalQuals[which(finalQuals[c(1:length(finalQuals)),c(2:5)] < 4),"Name"]
desap <- desap[1:41]
ap <- rep("APROBADO", length(ap))
desap <- rep("DESAPROBADO", length(desap))
notas <- c(ap, desap)
notas <- as.factor(notas)
porcentajes <- (table(notas) / length(notas)) * 100
porcentajes <- as.integer(porcentajes)
par(mfrow=c(2,2))
barplot(careers,col = c("#F06C98","#36D88A", "#DFFB3F"),ylim=c(0,250),main="Distribucion Por Carrera",   ylab = "Cantidad de Ingresantes",las=1,font.axis=4)
pie(table(ingreso$Status), c("BAJA","MATRICULADO"), col = c("#FE3F44", "#42E73A"), main = "Proporcion de Bajas")
pie(table(notas), c(paste("APROBADOS", porcentajes[1], "%"),paste("DESAPROBADOS", porcentajes[2], "%")), col = c("#42E73A", "#FE3F44"), main = "Aprobados Primeros Parciales")
histStack(ingreso$PromCI,ingreso$Sex,legend.pos="topright", col = c("#F06C98", "#6CF0C4"), main = "Promedio del Curso de ingreso")
Schools <- table(ingreso$School)
Schools <- as.data.frame(Schools)
topSchools <- Schools[which(Schools[,"Freq"] > 10),]
par(mfrow=c(1,1))
x <- barplot(topSchools$Freq,col = c("#FF7400", "#8BFF00" ,"#00FF74" ,"#008BFF" ,"#7400FF" ,"#FF008B"), ylim=c(0,27),main="Colegio con mas ingresantes",   ylab = "Cantidad de Ingresantes",las=1,font.axis=4, legend.text = topSchools$Var1, xlim = c(0,10))
porcentajesBajas <- (table(ingreso$Status)/ length(ingreso$Status)) * 100
porcentajesBajas <- as.integer(porcentajesBajas)
load(file = "ingreso.rdata")
load("~/Desktop/TpPredictorAcademico/TrabajoPredictorAcademico/finalQuals.RData")
load(file = "analisisInd.rdata")
load(file = "AnalisisInf.rdata")
library(plotrix)
careers <- table(ingreso$Career)
table <- table(ingreso[which(ingreso$Sex == "F"), "PromCI"])
ap <- finalQuals[which(finalQuals[c(1:length(finalQuals)),c(2:5)] > 3),"Name"]
desap <- finalQuals[which(finalQuals[c(1:length(finalQuals)),c(2:5)] < 4),"Name"]
desap <- desap[1:41]
porcentajesBajas <- (table(ingreso$Status)/ length(ingreso$Status)) * 100
porcentajesBajas <- as.integer(porcentajesBajas)
ap <- rep("APROBADO", length(ap))
desap <- rep("DESAPROBADO", length(desap))
notas <- c(ap, desap)
notas <- as.factor(notas)
porcentajesNotas <- (table(notas) / length(notas)) * 100
porcentajesNotas <- as.integer(porcentajesNotas)
par(mfrow=c(2,2))
barplot(careers,col = c("#F06C98","#36D88A", "#DFFB3F"),ylim=c(0,250),main="Distribucion Por Carrera",   ylab = "Cantidad de Ingresantes",las=1,font.axis=4)
pie(table(ingreso$Status), c(paste("BAJA", porcentajesBajas[1], "%"),paste("MATRICULADO", porcentajesBajas[2], "%")), col = c("#FE3F44", "#42E73A"), main = "Proporcion de Bajas")
pie(table(notas), c(paste("APROBADOS", porcentajes[1], "%"),paste("DESAPROBADOS", porcentajes[2], "%")), col = c("#42E73A", "#FE3F44"), main = "Aprobados Primeros Parciales")
histStack(ingreso$PromCI,ingreso$Sex,legend.pos="topright", col = c("#F06C98", "#6CF0C4"), main = "Promedio del Curso de ingreso")
Schools <- table(ingreso$School)
Schools <- as.data.frame(Schools)
topSchools <- Schools[which(Schools[,"Freq"] > 10),]
par(mfrow=c(1,1))
x <- barplot(topSchools$Freq,col = c("#FF7400", "#8BFF00" ,"#00FF74" ,"#008BFF" ,"#7400FF" ,"#FF008B"), ylim=c(0,27),main="Colegio con mas ingresantes",   ylab = "Cantidad de Ingresantes",las=1,font.axis=4, legend.text = topSchools$Var1, xlim = c(0,10))
library(plotrix)
load(file = "ingreso.rdata")
Year <- ingreso[, "Year"]
df <- data.frame(ingreso$Year, ingreso$Sex, ingreso$Career)
df$ingreso.Career <- as.character(df$ingreso.Career)
df[which(df$ingreso.Sex == "F"),"ingreso.Career"] <- paste(df[which(df$ingreso.Sex == "F"), "ingreso.Career"],"F")
df[which(df$ingreso.Sex == "M"),"ingreso.Career"] <- paste(df[which(df[,"ingreso.Sex"] == "M"), "ingreso.Career"],"M")
barplot(table(df$ingreso.Career,df$ingreso.Year),beside=TRUE, main = "Ingresantes totales", legend.text = TRUE, ylim=c(0,100), col=c("#FF7F00" ,"#80FF00", "#00FF7F", "#0080FF" ,"#7F00FF" ,"#FF0080"))
library(plotrix)
load(file = "ingreso.rdata")
Year <- ingreso[, "Year"]
df <- data.frame(ingreso$Year, ingreso$Sex, ingreso$Career)
df$ingreso.Career <- as.character(df$ingreso.Career)
df[which(df$ingreso.Sex == "F"),"ingreso.Career"] <- paste(df[which(df$ingreso.Sex == "F"), "ingreso.Career"],"F")
df[which(df$ingreso.Sex == "M"),"ingreso.Career"] <- paste(df[which(df[,"ingreso.Sex"] == "M"), "ingreso.Career"],"M")
barplot(table(df$ingreso.Career,df$ingreso.Year),beside=FALSE, main = "Ingresantes Totales", legend.text = TRUE, ylim=c(0,100), col=c("#FF7F00" ,"#80FF00", "#00FF7F", "#0080FF" ,"#7F00FF" ,"#FF0080"))
library(plotrix)
load(file = "ingreso.rdata")
Year <- ingreso[, "Year"]
df <- data.frame(ingreso$Year, ingreso$Sex, ingreso$Career)
df$ingreso.Career <- as.character(df$ingreso.Career)
df[which(df$ingreso.Sex == "F"),"ingreso.Career"] <- paste(df[which(df$ingreso.Sex == "F"), "ingreso.Career"],"F")
df[which(df$ingreso.Sex == "M"),"ingreso.Career"] <- paste(df[which(df[,"ingreso.Sex"] == "M"), "ingreso.Career"],"M")
barplot(table(df$ingreso.Career,df$ingreso.Year),beside=TRUE, main = "Ingresantes Totales", legend.text = TRUE, ylim=c(0,100), col=c("#FF7F00" ,"#80FF00", "#00FF7F", "#0080FF" ,"#7F00FF" ,"#FF0080"))
hyp.out <- glm(Baja~`Algebra exam 1`+`Algebra exam 2`+`Analisis exam 1`+`IntroProg exam 1`,
data=finalQuals, family="binomial")
str(finalQuals)
finalQuals$Baja <- as.factor(finalQuals$Baja)
hyp.out <- glm(Baja~`Algebra exam 1`+`Algebra exam 2`+`Analisis exam 1`+`IntroProg exam 1`,
data=finalQuals, family="binomial")
summary(hyp.out)
str(finalQuals)
hyp.out <- glm(Baja~`Algebra exam 1`+`Algebra exam 2`+`Analisis exam 1`+`IntroProg exam 1`,
data=finalQuals, family="binomial")
summary(hyp.out)
coef(summary(hyp.out))
load(file = "ingreso.rdata")
load("~/Desktop/TpPredictorAcademico/TrabajoPredictorAcademico/finalQuals.RData")
load(file = "analisisInd.rdata")
load(file = "AnalisisInf.rdata")
library(plotrix)
careers <- table(ingreso$Career)
table <- table(ingreso[which(ingreso$Sex == "F"), "PromCI"])
ap <- finalQuals[which(finalQuals[c(1:length(finalQuals)),c(2:5)] > 3),"Name"]
desap <- finalQuals[which(finalQuals[c(1:length(finalQuals)),c(2:5)] < 4),"Name"]
desap <- desap[1:41]
porcentajesBajas <- (table(ingreso$Status)/ length(ingreso$Status)) * 100
porcentajesBajas <- as.integer(porcentajesBajas)
ap <- rep("APROBADO", length(ap))
desap <- rep("DESAPROBADO", length(desap))
notas <- c(ap, desap)
notas <- as.factor(notas)
porcentajesNotas <- (table(notas) / length(notas)) * 100
porcentajesNotas <- as.integer(porcentajesNotas)
par(mfrow=c(2,2))
barplot(careers,col = c("#F06C98","#36D88A", "#DFFB3F"),ylim=c(0,250),main="Distribucion Por Carrera",   ylab = "Cantidad de Ingresantes",las=1,font.axis=4)
pie(table(ingreso$Status), c(paste("Baja", porcentajesBajas[1], "%"),paste("Matriculado", porcentajesBajas[2], "%")), col = c("#FE3F44", "#42E73A"), main = "Proporcion de Bajas")
pie(table(notas), c(paste("Aprobados", porcentajesNotas[1], "%"),paste("Desaprobados", porcentajesNotas[2], "%")), col = c("#42E73A", "#FE3F44"), main = "Aprobados Primeros Parciales")
histStack(ingreso$PromCI,ingreso$Sex,legend.pos="topright", col = c("#F06C98", "#6CF0C4"), main = "Promedio del Curso de ingreso")
Schools <- table(ingreso$School)
Schools <- as.data.frame(Schools)
topSchools <- Schools[which(Schools[,"Freq"] > 10),]
par(mfrow=c(1,1))
x <- barplot(topSchools$Freq,col = c("#FF7400", "#8BFF00" ,"#00FF74" ,"#008BFF" ,"#7400FF" ,"#FF008B"), ylim=c(0,27),main="Colegio con mas ingresantes",   ylab = "Cantidad de Ingresantes",las=1,font.axis=4, legend.text = topSchools$Var1, xlim = c(0,10))
finalQuals$Baja <- as.factor(finalQuals$Baja[(1:70)],)
finalQuals$Baja <- as.factor(finalQuals$Baja)
model <- finalQuals[(1:70),]
rest <- finalQuals[(71:length(finalQuals)),]
load("~/Desktop/TpPredictorAcademico/TrabajoPredictorAcademico/finalQuals.RData")
finalQuals$Baja <- as.factor(finalQuals$Baja)
model <- finalQuals[(1:70),]
rest <- finalQuals[(71:length(finalQuals)),]
hyp.out <- glm(Baja~`Algebra exam 1`+`Algebra exam 2`+`Analisis exam 1`+`IntroProg exam 1`,
data=model, family="binomial")
summary(hyp.out)
coef(summary(hyp.out))
predict(hyp.out, rest, se.fit = TRUE)
#Predicción
predict(model_mult, new, se.fit = TRUE)
Mass<- c(77.0, 85.5, 63.0, 80.5, 79.5, 94.0, 66.0, 69.0, 65.0, 58.0, 69.5, 73.0, 74.0, 68.0, 80.0, 66.0, 54.5, 64.0, 84.0, 73.0, 89.0, 94.0)
# Circunferencia maxima del antebrazo en cm
Fore<-c(28.5, 29.5, 25.0, 28.5, 28.5, 30.5, 26.5, 27.0, 26.5, 26.5, 28.5, 27.5, 29.5, 25.0, 29.5, 26.5, 24.0, 25.5, 30.0, 28.0, 29.0, 31.0)
# Circunferencia maxima del bicep en cm
Bicep<- c(33.5, 36.5, 31.0, 34.0, 36.5, 38.0, 29.0, 31.0, 29.0, 31.0, 37.0, 33.0, 36.0, 30.0, 36.0, 32.5, 30.0, 28.5, 34.5, 34.5, 35.5, 33.5)
# Distancia alrededor del pecho directamente debajo de las axilas en cm
Chest<- c(100.0, 107.0, 94.0, 104.0, 107.0, 112.0, 93.0, 95.0, 93.0, 96.0, 109.5, 102.0, 101.0, 98.5, 103.0, 89.0, 92.5, 87.5, 99.0, 97.0, 106.0, 106.0)
# Distancia alrededor del cuello en cm
Neck<- c(38.5, 39.0, 36.5, 39.0, 39.0, 39.0, 35.0, 37.0, 35.0, 35.0, 39.0, 38.5, 38.5, 37.0, 40.0, 35.0, 35.5, 35.0, 40.5, 37.0, 39.0, 39.0)
# Distancia alrededor de los hombros en cm
Shoulder<- c(114.0, 119.0, 102.0, 114.0, 114.0, 121.0, 105.0, 108.0, 112.0, 103.0, 118.0, 113.0, 115.5, 108.0, 117.0, 104.5, 102.0, 109.0, 119.0, 104.0, 118.0, 120.0)
# Distancia alrededor de la cintura en cm.
Waist<- c(85.0,  90.5, 80.5, 91.5, 92.0, 101.0, 76.0, 84.0, 74.0, 76.0, 80.0, 86.0, 82.0, 82.0, 95.5, 81.0, 76.0, 84.0, 88.0, 82.0, 96.0, 99.5)
# Altura desde la parte superior a los pies en cm.
Height<- c(178.0, 187.0, 175.0, 183.0, 174.0, 180.0, 177.5, 182.5, 178.5, 168.5, 170.0, 180.0, 186.5, 188.0, 173.0, 171.0, 169.0, 181.0, 188.0, 173.0, 179.0, 184.0)
# Circunferencia máxima de la pantorrilla en cm.
Calf<- c(37.5, 40.0, 33.0, 38.0, 40.0, 39.5, 38.5, 36.0, 34.0, 35.0, 38.0, 36.0, 38.0, 37.0, 37.0, 38.0, 32.0, 35.5, 39.0, 38.0, 39.5, 42.0)
# Circunferencia del muslo en cm.
Thigh<- c(53.0, 52.0, 49.0, 50.0, 53.0, 57.5, 50.0, 49.0, 47.0, 46.0, 50.0, 49.0, 49.0, 49.5, 52.5, 48.0, 42.0, 42.0, 50.5, 49.0, 51.0, 55.0)
# Circunferencia de la cabeza en cm.
Head<- c(58.0, 59.0, 57.0, 60.0, 59.0, 59.0, 58.5, 60.0, 55.5, 58.0, 58.5, 59.0, 60.0, 57.0, 58.0, 56.5, 57.0, 58.0, 56.0, 58.0, 58.5, 57.0)
mydata<-cbind(Mass, Fore, Bicep, Chest, Neck, Shoulder, Waist, Height, Calf, Thigh, Head)
mydata<-as.data.frame(mydata)
plot(mydata)
library(corrplot)
corrplot(cor(mydata), method= 'color')
names(mydata)
model <- lm(formula = Mass ~ Fore + Waist + Height + Thigh)
summary(model)
model_mult <- lm(formula = Mass ~ ., data = mydata)
summary(lm(Mass~Fore, data = mydata))
summary(lm(Mass~Bicep, data = mydata))
summary(lm(Mass~Fore+Bicep, data = mydata))
new<-matrix(c(30.5, 28.5, 28.5, 33.5, 30.0, 31.0, 93.0, 112.0, 89.0, 39.0, 35.0, 38.5, 109.0, 105.0, 121.0, 84.0, 82.0, 96.0, 188.0, 177.5, 178.5, 37.5, 34.0, 40.0, 55.0, 42.0, 49.0, 58.0 , 59.0, 60.0),nrow=3,byrow=F)
colnames(new)<-colnames(mydata)[2:11];
new<-as.data.frame(new);
#Predicción
predict(model_mult, new, se.fit = TRUE)
library(rpart)
str(cu.summary)
library(caret)
?`caret-internal``
?caret
end
``
?caret
load("~/Desktop/TpPredictorAcademico/TrabajoPredictorAcademico/finalQuals.RData")
finalQuals$Baja <- as.factor(finalQuals$Baja)
model <- finalQuals[(1:70),]
rest <- finalQuals[(71:length(finalQuals)),]
hyp.out <- glm(Baja~`Algebra exam 1`+`Algebra exam 2`+`Analisis exam 1`+`IntroProg exam 1`,
data=model, family="binomial")
summary(hyp.out)
coef(summary(hyp.out))
predict(hyp.out, rest, se.fit = TRUE)
model <- finalQuals[(1:70),]
model
View(finalQuals)
load("~/Desktop/TpPredictorAcademico/TrabajoPredictorAcademico/finalQuals.RData")
finalQuals$Baja <- as.factor(finalQuals$Baja)
model <- finalQuals[(1:70),]
rest <- finalQuals[(71:length(finalQuals)),]
hyp.out <- glm(Baja~`Algebra exam 1`+`Algebra exam 2`+`Analisis exam 1`+`IntroProg exam 1`,
data=model, family="binomial")
summary(hyp.out)
coef(summary(hyp.out))
predict(hyp.out, rest, se.fit = TRUE)
summary(hyp.out)
coef(summary(hyp.out))
predict(hyp.out, rest, se.fit = TRUE)
?proma
finalQuals[which(is.na(finalQuals)),] <- 2.01
load("~/Desktop/TpPredictorAcademico/TrabajoPredictorAcademico/finalQuals.RData")
View(finalQuals)
finalQuals[which(is.na(finalQuals$`Algebra exam 1`)),] <- 2.01
load("~/Desktop/TpPredictorAcademico/TrabajoPredictorAcademico/finalQuals.RData")
finalQuals[which(is.na(finalQuals$`Algebra exam 1`)),"Algebra exam 1"] <- 2.01
finalQuals[which(is.na(finalQuals$`Algebra exam 1`)),"Algebra exam 1"] <- 2.01
finalQuals[which(is.na(finalQuals$`Algebra exam 1`)),"Algebra exam 1"] <- 2.01
finalQuals[which(is.na(finalQuals$`Algebra exam 2`)),"Algebra exam 2"] <- 2.01
finalQuals[which(is.na(finalQuals$`Analisis exam 1`)),"Analisis exam 1"] <- 2.01
finalQuals[which(is.na(finalQuals$`IntroProg exam 1`)),"IntroProg exam 1"] <- 2.01
finalQuals$Baja <- as.factor(finalQuals$Baja)
model <- finalQuals[(1:70),]
rest <- finalQuals[(71:length(finalQuals)),]
hyp.out <- glm(Baja~`Algebra exam 1`+`Algebra exam 2`+`Analisis exam 1`+`IntroProg exam 1`,
data=model, family="binomial")
summary(hyp.out)
coef(summary(hyp.out))
?glm
coef(summary(hyp.out))
predict(hyp.out, rest, se.fit = TRUE)
predsRest <- predict(hyp.out, rest, se.fit = TRUE)
boxplot(predsRest ~ NH11$hypev, col = c("green", "red"),
ylab = "Probabilidad",
xlab = "Tiene / No tiene hypertensión")
predsRest
index <- createDataPartition(train_transformed$finalQuals, p=0.75, list=FALSE)
library(caret)
index <- createDataPartition(train_transformed$finalQuals, p=0.75, list=FALSE)
caret
install.packages(caret)
install.packages("constrainedKriging_0.2.4.tgz")
install.packages("customizedTraining")
index <- createDataPartition(train_transformed$finalQuals, p=0.75, list=FALSE)
install.packages("constrainedKriging")
install.packages("iC10TrainingData")
install.packages("mangoTraining")
install.packages("StrainRanking")
library(caret)
index <- createDataPartition(train_transformed$finalQuals, p=0.75, list=FALSE)
install.packages("caret", dependencies = c("Depends", "Suggests"))
install.packages("caret", dependencies = c("Depends", "Suggests"))
save(file = "analisisInd.rdata", AnalisisInd)
save(file = "analisisInf.rdata", AnalisisInf)
View(ingreso)
View(ingreso)
View(ingreso)
View(ingreso)
View(ingreso)
View(AnalisisInd)
index <- createDataPartition(train_transformed$finalQuals, p=0.75, list=FALSE)
index <- createDataPartition(finalQuals_transformed$Baja, p=0.75, list=FALSE)
index <- createDataPartition(finalQuals, p=0.75, list=FALSE)
View(hyp.out)
View(hyp.out)
View(index)
View(index)
index <- createDataPartition(finalQuals$Baja, p=0.75, list=FALSE)
trainSet <- train_transformed[ index,]
load(file = "analisisInd.rdata")
load(file = "analisisInf.rdata")
library(ggplot2)
AnalisisInd[,4] <- "IND"
AnalisisInf[,4] <- "INF"
analisis <- merge.data.frame(AnalisisInd, AnalisisInf, all = TRUE)
names(analisis) <- c("names", "Nota", "Prom",  "Career")
Nota <- analisis$Nota
Career <- analisis$Career
analisis <- analisis[,-3]
analisis$Nota <- as.numeric(analisis$Nota)
analisis$Career <- as.factor(analisis$Career)
library(plyr)
p<-ggplot(analisis, aes(x=Nota, fill=Career), ylim = c(0,0.5)) +
geom_density(alpha=0.7)
p + scale_fill_manual(values=c("#00FF7F", "orange")) + theme(aspect.ratio = 0.7) + labs(title = "Notas de Analisis 1", subtitle = "Grafico de Densidad") +   theme(plot.title = element_text(size = 35, face = "bold")) +  theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent",colour = NA)
)
p<-ggplot(analisis, aes(x=Nota, fill=Career), ylim = c(0,0.5)) +
geom_density(alpha=0.7)
p + scale_fill_manual(values=c("#00FF7F", "orange")) + theme(aspect.ratio = 0.7) + labs(title = "Notas de Analisis 1", subtitle = "Grafico de Densidad") +   theme(plot.title = element_text(size = 35, face = "bold")) +  theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent",colour = NA)
)
p<-ggplot(analisis, aes(x=Nota, fill=Career), ylim = c(0:0.5)) +
geom_density(alpha=0.7)
p + scale_fill_manual(values=c("#00FF7F", "orange")) + theme(aspect.ratio = 0.7) + labs(title = "Notas de Analisis 1", subtitle = "Grafico de Densidad") +   theme(plot.title = element_text(size = 35, face = "bold")) +  theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent",colour = NA)
)
x <- barplot(topSchools$Freq,col = c("#FF7400", "#8BFF00" ,"#00FF74" ,"#008BFF" ,"#7400FF" ,"#FF008B"), ylim=c(0,27),main="Colegio con más ingresantes",   ylab = "Cantidad de Ingresantes",las=1,font.axis=4, legend.text = topSchools$Var1, xlim = c(0,10))
load(file = "ingreso.rdata")
Schools <- table(ingreso$School)
Schools <- as.data.frame(Schools)
topSchools <- Schools[which(Schools[,"Freq"] > 10),]
x <- barplot(topSchools$Freq,col = c("#FF7400", "#8BFF00" ,"#00FF74" ,"#008BFF" ,"#7400FF" ,"#FF008B"), ylim=c(0,27),main="Colegio con más ingresantes",   ylab = "Cantidad de Ingresantes",las=1,font.axis=4, legend.text = topSchools$Var1, xlim = c(0,10))
load(file = "ingreso.rdata")
load("~/Desktop/TpPredictorAcademico/TrabajoPredictorAcademico/finalQuals.RData")
load(file = "analisisInd.rdata")
load(file = "AnalisisInf.rdata")
library(plotrix)
careers <- table(ingreso$Career)
table <- table(ingreso[which(ingreso$Sex == "F"), "PromCI"])
ap <- finalQuals[which(finalQuals[c(1:length(finalQuals)),c(2:5)] > 3),"Name"]
desap <- finalQuals[which(finalQuals[c(1:length(finalQuals)),c(2:5)] < 4),"Name"]
desap <- desap[1:41]
porcentajesBajas <- (table(ingreso$Status)/ length(ingreso$Status)) * 100
porcentajesBajas <- as.integer(porcentajesBajas)
ap <- rep("APROBADO", length(ap))
desap <- rep("DESAPROBADO", length(desap))
notas <- c(ap, desap)
notas <- as.factor(notas)
porcentajesNotas <- (table(notas) / length(notas)) * 100
porcentajesNotas <- as.integer(porcentajesNotas)
par(mfrow=c(2,2))
barplot(careers,col = c("#F06C98","#36D88A", "#DFFB3F"),ylim=c(0,250),main="Distribucion Por Carrera",   ylab = "Cantidad de Ingresantes",las=1,font.axis=4)
pie(table(ingreso$Status), c(paste("Baja", porcentajesBajas[1], "%"),paste("Matriculado", porcentajesBajas[2], "%")), col = c("#FE3F44", "#42E73A"), main = "Proporcion de Bajas")
pie(table(notas), c(paste("Aprobados", porcentajesNotas[1], "%"),paste("Desaprobados", porcentajesNotas[2], "%")), col = c("#42E73A", "#FE3F44"), main = "Aprobados Primeros Parciales")
histStack(ingreso$PromCI,ingreso$Sex,legend.pos="topright", col = c("#F06C98", "#6CF0C4"), main = "Promedio del Curso de ingreso")
load(file = "ingreso.rdata")
load("~/Desktop/TpPredictorAcademico/TrabajoPredictorAcademico/finalQuals.RData")
load(file = "analisisInd.rdata")
load(file = "AnalisisInf.rdata")
library(plotrix)
careers <- table(ingreso$Career)
table <- table(ingreso[which(ingreso$Sex == "F"), "PromCI"])
ap <- finalQuals[which(finalQuals[c(1:length(finalQuals)),c(2:5)] > 3),"Name"]
desap <- finalQuals[which(finalQuals[c(1:length(finalQuals)),c(2:5)] < 4),"Name"]
desap <- desap[1:41]
porcentajesBajas <- (table(ingreso$Status)/ length(ingreso$Status)) * 100
porcentajesBajas <- as.integer(porcentajesBajas)
ap <- rep("APROBADO", length(ap))
desap <- rep("DESAPROBADO", length(desap))
notas <- c(ap, desap)
notas <- as.factor(notas)
porcentajesNotas <- (table(notas) / length(notas)) * 100
porcentajesNotas <- as.integer(porcentajesNotas)
par(mfrow=c(2,2))
barplot(careers,col = c("#F06C98","#36D88A", "#DFFB3F"),ylim=c(0,250),main="Distribucion Por Carrera",   ylab = "Cantidad de Ingresantes",las=1,font.axis=4)
pie(table(ingreso$Status), c(paste("Baja", porcentajesBajas[1], "%"),paste("Matriculado", porcentajesBajas[2], "%")), col = c("#FE3F44", "#42E73A"), main = "Proporcion de Bajas")
pie(table(notas), c(paste("Aprobados", porcentajesNotas[1], "%"),paste("Desaprobados", porcentajesNotas[2], "%")), col = c("#42E73A", "#FE3F44"), main = "Aprobados Primeros Parciales")
histStack(ingreso$PromCI,ingreso$Sex,legend.pos="topright", col = c("#F06C98", "#6CF0C4"), main = "Promedio del Curso de ingreso")
